input_line:
  valid:
    # literal
    - input 'a.txt'
    # wildcard
    - input '*.txt'
    # with method
    - input "*.txt".as_data_expr
    # with sequence
    - input 'a' | 'b' | 'c'
    # with variable
    - input $X
    # with embedded variable
    - input '{$I[1][1]}.a'

output_line:
  valid:
    # literal
    - output 'a.txt'
    # wildcard
    - output '*.txt'
    # with method
    - output "*.txt".as_data_expr
    # with sequence
    - output 'a' | 'b' | 'c'
    # with variable
    - output $X
    # with embedded variable
    - output '{$I[1][1]}.a'

param_line:
  valid:
    # simple
    - "param $X"
    # simple with default value
    - "param $X := 1"
    # implicit basic parameter
    - "basic param $X"
    # implicit basic parameter with default value
    - "basic param $X := 1"
    # advanced parameter
    - "advanced param $X"
    # adevanced parameter with default value
    - "advanced param $X := 1"
  invalid:
    # with invalid variable
    - "param $"
    # with value
    - "param 1"
    # with block basic modifier
    - "Basic param $X"
    # invalid keyword
    - "basicparam $X"
    # with block advanced modifier
    - "Advanced param $X"
    # invalid keyword
    - "advancedparam $X"

feature_line:
  valid:
    - feature +A
    - feature -A
    - feature ?A
    - feature "A".as_requisite_feature
  invalid:
    - feature +
    - feature -
    - feature ?

rule_header:
  valid:
    - Rule Test
    - Rule test

rule_condition:
  valid:
    # input condition
    - "input '*.txt'"
    # output condition
    - "output '*.txt'"
    # parameter condition
    - "param $var"
    # feature condition
    - "feature +A"
    # constraint condition
    - "constraint $N.odd?"
    # annotation
    - '@ note :: "test"'

rule_conditions:
  valid:
    - | # input and output
      input '*.a'
      input '*.b'
    - | # full conditions
      input '*.a'
      input '*.b'
      output '*.c'
      param $var
      feature +A
      constraint $i
    - | # some conditions
      output '*.a'
      input '*.b'
      feature -A
      param $var
    - | # heading empty line
      
      input '*.a'
      output '*.b'
    - | # middle empty line
      input '*.a'
      
      output '*.b'
    - | # tail empty line
      input '*.a'
      output '*.b'
      
    - | # heading comment
      # comment
      input '*.a'
      output '*.b'
    - | # middle comment
      input '*.a'
      # comment
      output '*.b'
    - | # tail comment
      input '*.a'
      output '*.b'
      # comment
    - | # multilines
      input '*.a'; input '*.b'; input '*.c'
      output '*.x'; output '*.y'; output '*.z'

rule_definition:
  valid:
    - | # simple flow rule
      Rule Test
        input '*.a'
        output '*.b'
      Flow
        rule Test1
      End
    - | # simple action rule
      Rule Test
        input '*.a'
        output '*.b'
      Action
        echo "a"
      End
    - | # simple empty rule
      Rule Test
        input '*.a'
        output '*.a'.update
      End
    - |
      Rule Test
        input  '*.a'
        output '{$I[1][1]}.b'
      Action
        echo "test" > {$O[1].NAME}
      End
    - |
      Rule Test
        input '*.a'
        output '{$I[1][1]}.b'
      Flow
        rule TestA
        rule TestB
      End
    - |
      Rule Test
        output 'test.txt'
        param $N := 1
      Flow
        rule TestA
      End

