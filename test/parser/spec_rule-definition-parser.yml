input_line:
  valid:
    - input '*.txt'
    - input "*.txt".as_data_expr
    - input $X

output_line:
  valid:
    - output '*.txt'
    - output "*.txt".as_data_expr
    - output $X

param_line:
  valid:
    - "param $abc"
    - "param $Var"
    - "param $Var := 1"
    - "param $NUM := 1.0"
    - "param $STR := \"abc\""
    - "basic param $X"
    - "basic param $X := 1"
    - "advanced param $X"
    - "advanced param $X := 1"
  invalid:
    - "param $"
    - "Basic param $X := 1"
    - "basicparam $X := 1"
    - "Advanced param $X := 1"
    - "advancedparam $X := 1"

feature_line:
  valid:
    - feature +A
    - feature -A
    - feature ?A
    - feature "A".as_requisite_feature
  invalid:
    - feature +
    - feature -
    - feature ?

rule_header:
  valid:
    - Rule Test
    - Rule test

rule_condition:
  valid:
    - input '*.txt'
    - output '*.txt'
    - param $var
    - feature +A
    - constraint $N.odd?

rule_conditions:
  valid:
    - | # input and output
      input '*.a'
      input '*.b'
    - | # full conditions
      input '*.a'
      input '*.b'
      output '*.c'
      param $var
      feature +A
    - | # some conditions
      output '*.a'
      input '*.b'
      feature -A
      param $var
    - | # heading empty line
      
      input '*.a'
      output '*.b'
    - | # middle empty line
      input '*.a'
      
      output '*.b'
    - | # tail empty line
      input '*.a'
      output '*.b'
      
    - | # heading comment
      # comment
      input '*.a'
      output '*.b'
    - | # middle comment
      input '*.a'
      # comment
      output '*.b'
    - | # tail comment
      input '*.a'
      output '*.b'
      # comment

rule_definition:
  valid:
    - |
      Rule test
        input '*.a'
        output '*.b'
      Flow
        rule Test
      End
    - |
      Rule test
        input '*.a'
        output '*.b'
      Action
        echo "a"
      End
    - |
      Rule Test
        input  '*.a'
        output '{$INPUT[1].MATCH[1]}.b'
      Action
        echo "test" > {$OUTPUT[1].NAME}
      End
    - |
      Rule Test
        input '*.a'
        output '{$INPUT[1].MATCH[1]}.b'
      Flow
        rule TestA
        rule TestB.sync
      End
    - |
      Rule Test
        output 'test.txt'
        param $N := 1
      Flow
        rule TestA
      End

