#!/usr/bin/env ruby
# -*- ruby -*-

require 'innocent-white'
require 'innocent-white/tuple-space-provider'
require 'innocent-white/simulator/input-generator'
require 'innocent-white/agent/logger'
require 'innocent-white/agent/process-manager'
require 'innocent-white/process-handler'
require 'innocent-white/document'

Thread.abort_on_exception = true

InnocentWhite.debug_mode
InnocentWhite.set_signal_trap
DRb.start_service

# tuple space provider
provider = InnocentWhite::TupleSpaceProvider.get

# server
server = InnocentWhite::TupleSpaceServer.new(task_worker_resource: 2)

# register tuple space server
provider.add(server)

# logger
InnocentWhite::Agent[:logger].new(server)

# input generator
generator = InnocentWhite::Simulator::SimpleInputGeneratorMethod.new("test-001".."test-100", "a", 1..100)
InnocentWhite::Agent[:input_generator].new(server, generator)

# process definition document
if ARGF.filename == "-"
  puts "No process document."
  exit
end
doc = InnocentWhite::Document.load(ARGF)

# process manager
InnocentWhite::Agent[:process_manager].new(server, doc)

DRb.thread.join
