#!/usr/bin/env ruby
# -*- ruby -*-

require 'pp'
require 'optparse'

require 'innocent-white/common'
require 'innocent-white/tuple-space-provider'

include InnocentWhite

#
# parse options
#

OPTS = {}
OPTS[:targets] = []
OPTS[:exclusions] = []

option_parser = OptionParser.new do |opt|
  opt.on('-t', '--target=name') {|name| OPTS[:targets] << name }
  opt.on('-e', '--exclude=name') {|name| OPTS[:exclusions] << name}
  opt.on('--color=true or false') {|str|
    bool = nil
    bool = true if str == "true"
    bool = false if str == "false"
    if bool.nil?
      puts "invalid color option: %s" % bool
      exit
    end
    Terminal.color_mode = bool
  }
end

begin
  option_parser.parse!(ARGV)
rescue OptionParser::InvalidOption => e
  e.args.each {|arg| puts "unknown option: #{arg}" }
  exit
end

#
# start druby environment
#

DRb.start_service

# tuple space provider
provider = InnocentWhite::TupleSpaceProvider.instance

def setup_tuple_space_notifier(tuple_space_server, targets)
  puts "TupleSpaceServer: %s" % Terminal.red(tuple_space_server.uuid)
  targets.each do |target|
    notifier = tuple_space_server.notify(nil, Tuple[target.intern].new, 5)
    Thread.new do
      notifier.each do |event, tuple|
        pp event
        pp tuple
      end
    end
  end
end

# print tuples
while true do
  provider.tuple_space_servers.each do |ts_server|
    setup_tuple_space_notifier(ts_server, OPTS[:targets])
    sleep 3
  end
end

