Flow 'main'
  input-all '*.txt'.except('summary.txt')
  output 'summary.txt'
Define--------------------------------------------------------------------------
rule 'convert_to_utf8'
rule 'count_char'.sync
rule 'summarize'
-----------------------------------------------------------------------------End

Action 'convert_to_utf8'
  input '*.txt'.except('summary.txt')
  output '{$INPUT[1]}.utf8'
Shell---------------------------------------------------------------------------
nkf -w {$INPUT[1]} > {$OUTPUT[1]}
-----------------------------------------------------------------------------End

Action 'count_char'
  input '*.utf8'
  output '{$INPUT[1].*}.count'.stdout
Ruby----------------------------------------------------------------------------
table = {}
text = File.open("{$INPUT[1]}").read
text.split("").each do |c|
  table[c] =  table.has_key?(c) ? table[c].succ : 1
end
table.each do |key, val|
  puts "#{key.inspect[1..-2]}:#{val}"
end
-----------------------------------------------------------------------------End

Action 'summarize'
  input-all '*.count'
  output 'summary.txt'.stdout
Ruby----------------------------------------------------------------------------
table = {}
"{$INPUT[1]}".split(":").each do |path|
  File.read(path).split("\n").map do |line|
    c, number = line.split(":")
    table[c] = (table.has_key?(c) ? table[c] : 0) + number.to_i
  end
end
File.open("{$OUTPUT[1]}", "w+") do |out|
  table.keys.sort {|a,b| table[b] <=> table[a] }.each do |key|
    puts "#{key.inspect[1..-2]}:#{table[key]}"
  end
end
-----------------------------------------------------------------------------End
