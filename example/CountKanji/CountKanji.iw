# -*- coding: utf-8 -*-
# -*- ruby -*-

InnocentWhite::Document.new do
  # Main flow
  define_flow('main') do
    inputs  all('*.txt')
    outputs 'result.txt'
    content [call "convert_to_utf8",
             call_with_sync"count_kanji",
             call "sum_kanji"]
  end

  # Convert to UTF-8 by nkf
  define_action('convert_to_utf8') do
    inputs  '*.txt'
    outputs '{$INPUT[1].NAME}.utf8'
    content 'nkf -W {$INPUT[1].PATH} > {$OUTPUT[1].PATH}'
  end

  # Count characters
  define_action('count_kanji') do
    inputs '*.utf8'
    outputs '{$INPUT[1].MATCH[1]}.count'
    content <<'__SH__'
#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
table = {}
text = File.open("{$INPUT[1].PATH}").read
text.split("").each do |c|
  table[c] =  table.has_key?(c) ? table[c].succ : 1
end
table.each do |key, val|
  puts "#{key.inspect[1..-2]}:#{val}"
end
__SH__
  end

  # Summarize kanji characters
  define_action('sum_kanji') do
    inputs all('*.count')
    outputs 'result.txt'
    content <<'__SH__'
#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
table = {}
"{$INPUT[1].PATH}".split(",").each do |path|
  File.read(path).split("\n").map do |line|
    c, number = line.split(":")
    table[c] = table.has_key?(c) ? table[c] + number.to_i : number.to_i
  end
end

File.open("{$OUTPUT[1].PATH}", "w+") do |out|
  table.keys.sort {|a,b| table[b] <=> table[a] }.each do |key|
    puts "#{key.inspect[1..-2]}:#{table[key]}"
  end
end
__SH__
  end
end
